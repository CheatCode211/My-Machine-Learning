Failed with encoding: utf-8 - 'utf-8' codec can't decode byte 0xad in position 73: invalid start byte
Successfully read the CSV file with encoding: latin1
                                              domain   ranking mld_res  \
0  nobell.it/70ffb52d079109dca5664cce6f317373782/...  10000000     1.0
1  www.dghjdgf.com/paypal.co.uk/cycgi-bin/webscrc...  10000000     0.0
2  serviciosbys.com/paypal.cgi.bin.get-into.herf....  10000000     0.0
3  mail.printakid.com/www.online.americanexpress....  10000000     0.0
4  thewhiskeydregs.com/wp-content/themes/widescre...  10000000     0.0
  mld.ps_res  card_rem  ratio_Rrem  ratio_Arem  jaccard_RR  jaccard_RA  \
0        0.0      18.0  107.611111  107.277778         0.0         0.0
1        0.0      11.0  150.636364  152.272727         0.0         0.0
2        0.0      14.0   73.500000   72.642857         0.0         0.0
3        0.0       6.0  562.000000  590.666667         0.0         0.0
4        0.0       8.0   29.000000   24.125000         0.0         0.0
   jaccard_AR  jaccard_AA jaccard_ARrd jaccard_ARrem  label
0         0.0         0.0          0.8      0.795729    1.0
1         0.0         0.0            0      0.768577    1.0
2         0.0         0.0            0      0.726582    1.0
3         0.0         0.0            0       0.85964    1.0
4         0.0         0.0            0      0.748971    1.0
C:\Users\PC\AppData\Local\Temp\ipykernel_10972\3038593440.py:6: DtypeWarning: Columns (1,2,3,11,12) have mixed types. Specify dtype option on import or set low_memory=False.
  data = pd.read_csv(r"C:\Users\PC\Documents\MLCodes\urlset.csv", encoding=encoding, on_bad_lines='skip')
Collecting seaborn
  Obtaining dependency information for seaborn from https://files.pythonhosted.org/packages/83/11/00d3c3dfc25ad54e731d91449895a79e4bf2384dc3ac01809010ba88f6d5/seaborn-0.13.2-py3-none-any.whl.metadata
  Downloading seaborn-0.13.2-py3-none-any.whl.metadata (5.4 kB)
Requirement already satisfied: numpy!=1.24.0,>=1.20 in c:\users\pc\appdata\local\programs\python\python311\lib\site-packages (from seaborn) (1.26.4)
Requirement already satisfied: pandas>=1.2 in c:\users\pc\appdata\local\programs\python\python311\lib\site-packages (from seaborn) (2.2.1)
Requirement already satisfied: matplotlib!=3.6.1,>=3.4 in c:\users\pc\appdata\local\programs\python\python311\lib\site-packages (from seaborn) (3.8.3)
Requirement already satisfied: contourpy>=1.0.1 in c:\users\pc\appdata\local\programs\python\python311\lib\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (1.2.0)
Requirement already satisfied: cycler>=0.10 in c:\users\pc\appdata\local\programs\python\python311\lib\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (0.12.1)
Requirement already satisfied: fonttools>=4.22.0 in c:\users\pc\appdata\local\programs\python\python311\lib\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (4.50.0)
Requirement already satisfied: kiwisolver>=1.3.1 in c:\users\pc\appdata\local\programs\python\python311\lib\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (1.4.5)
Requirement already satisfied: packaging>=20.0 in c:\users\pc\appdata\roaming\python\python311\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (24.0)
Requirement already satisfied: pillow>=8 in c:\users\pc\appdata\local\programs\python\python311\lib\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (10.2.0)
Requirement already satisfied: pyparsing>=2.3.1 in c:\users\pc\appdata\local\programs\python\python311\lib\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (3.1.2)
Requirement already satisfied: python-dateutil>=2.7 in c:\users\pc\appdata\local\programs\python\python311\lib\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (2.9.0.post0)
Requirement already satisfied: pytz>=2020.1 in c:\users\pc\appdata\local\programs\python\python311\lib\site-packages (from pandas>=1.2->seaborn) (2024.1)
Requirement already satisfied: tzdata>=2022.7 in c:\users\pc\appdata\local\programs\python\python311\lib\site-packages (from pandas>=1.2->seaborn) (2023.3)
Requirement already satisfied: six>=1.5 in c:\users\pc\appdata\local\programs\python\python311\lib\site-packages (from python-dateutil>=2.7->matplotlib!=3.6.1,>=3.4->seaborn) (1.16.0)
Downloading seaborn-0.13.2-py3-none-any.whl (294 kB)
   ---------------------------------------- 0.0/294.9 kB ? eta -:--:--
   ---- ----------------------------------- 30.7/294.9 kB ? eta -:--:--
   ---- ----------------------------------- 30.7/294.9 kB ? eta -:--:--
   ---- ----------------------------------- 30.7/294.9 kB ? eta -:--:--
   ---- ----------------------------------- 30.7/294.9 kB ? eta -:--:--
   -------- ------------------------------ 61.4/294.9 kB 272.3 kB/s eta 0:00:01
   -------------- ----------------------- 112.6/294.9 kB 435.7 kB/s eta 0:00:01
   -------------- ----------------------- 112.6/294.9 kB 435.7 kB/s eta 0:00:01
   -------------- ----------------------- 112.6/294.9 kB 435.7 kB/s eta 0:00:01
   -------------- ----------------------- 112.6/294.9 kB 435.7 kB/s eta 0:00:01
   ----------------- -------------------- 133.1/294.9 kB 314.3 kB/s eta 0:00:01
   ------------------------------ ------- 235.5/294.9 kB 533.8 kB/s eta 0:00:01
   ------------------------------ ------- 235.5/294.9 kB 533.8 kB/s eta 0:00:01
   ------------------------------ ------- 235.5/294.9 kB 533.8 kB/s eta 0:00:01
   ------------------------------ ------- 235.5/294.9 kB 533.8 kB/s eta 0:00:01
   ------------------------------------ - 286.7/294.9 kB 465.5 kB/s eta 0:00:01
   -------------------------------------- 294.9/294.9 kB 455.5 kB/s eta 0:00:00
Installing collected packages: seaborn
Successfully installed seaborn-0.13.2
[notice] A new release of pip is available: 23.2.1 -> 24.1.2
[notice] To update, run: python.exe -m pip install --upgrade pip
C:\Users\PC\AppData\Local\Temp\ipykernel_10972\2913115448.py:2: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ranking = cols[0]
C:\Users\PC\AppData\Local\Temp\ipykernel_10972\2913115448.py:9: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  mld_res = cols[0]
C:\Users\PC\AppData\Local\Temp\ipykernel_10972\2913115448.py:16: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  mld_ps_res = cols[0]
C:\Users\PC\AppData\Local\Temp\ipykernel_10972\2913115448.py:23: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  card_rem = cols[0]
C:\Users\PC\AppData\Local\Temp\ipykernel_10972\2913115448.py:30: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ratio_Rrem = cols[0]
C:\Users\PC\AppData\Local\Temp\ipykernel_10972\2913115448.py:37: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ratio_Arem = cols[0]
C:\Users\PC\AppData\Local\Temp\ipykernel_10972\2913115448.py:44: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  jaccard_RR = cols[0]
C:\Users\PC\AppData\Local\Temp\ipykernel_10972\2913115448.py:51: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  jaccard_RA = cols[0]
C:\Users\PC\AppData\Local\Temp\ipykernel_10972\2913115448.py:58: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  jaccard_AR = cols[0]
C:\Users\PC\AppData\Local\Temp\ipykernel_10972\2913115448.py:65: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  jaccard_AA = cols[0]
C:\Users\PC\AppData\Local\Temp\ipykernel_10972\2913115448.py:72: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  jaccard_ARrd = cols[0]
C:\Users\PC\AppData\Local\Temp\ipykernel_10972\2913115448.py:79: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  jaccard_ARrem = cols[0]
C:\Users\PC\AppData\Local\Temp\ipykernel_10972\2913115448.py:86: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  label = cols[0]
<class 'pandas.core.frame.DataFrame'>
Index: 76777 entries, 88985 to 15795
Data columns (total 12 columns):
 #   Column         Non-Null Count  Dtype
---  ------         --------------  -----
 0   ranking        76777 non-null  float64
 1   mld_res        76777 non-null  float64
 2   mld.ps_res     76777 non-null  float64
 3   card_rem       76777 non-null  float64
 4   ratio_Rrem     76777 non-null  float64
 5   ratio_Arem     76777 non-null  float64
 6   jaccard_RR     76777 non-null  float64
 7   jaccard_RA     76777 non-null  float64
 8   jaccard_AR     76777 non-null  float64
 9   jaccard_AA     76777 non-null  float64
 10  jaccard_ARrd   76777 non-null  float64
 11  jaccard_ARrem  76777 non-null  float64
dtypes: float64(12)
memory usage: 7.6 MB
c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(
              precision    recall  f1-score   support
         0.0       0.77      0.45      0.57      9605
         1.0       0.61      0.86      0.71      9590
    accuracy                           0.66     19195
   macro avg       0.69      0.66      0.64     19195
weighted avg       0.69      0.66      0.64     19195
Axes(0.125,0.11;0.62x0.77)
The accuracy of Logistic Regression is : 0.6567856212555353
Failed with encoding: utf-8 - 'utf-8' codec can't decode byte 0xad in position 73: invalid start byte
Successfully read the CSV file with encoding: latin1
                                              domain   ranking mld_res  \
0  nobell.it/70ffb52d079109dca5664cce6f317373782/...  10000000     1.0
1  www.dghjdgf.com/paypal.co.uk/cycgi-bin/webscrc...  10000000     0.0
2  serviciosbys.com/paypal.cgi.bin.get-into.herf....  10000000     0.0
3  mail.printakid.com/www.online.americanexpress....  10000000     0.0
4  thewhiskeydregs.com/wp-content/themes/widescre...  10000000     0.0
  mld.ps_res  card_rem  ratio_Rrem  ratio_Arem  jaccard_RR  jaccard_RA  \
0        0.0      18.0  107.611111  107.277778         0.0         0.0
1        0.0      11.0  150.636364  152.272727         0.0         0.0
2        0.0      14.0   73.500000   72.642857         0.0         0.0
3        0.0       6.0  562.000000  590.666667         0.0         0.0
4        0.0       8.0   29.000000   24.125000         0.0         0.0
   jaccard_AR  jaccard_AA jaccard_ARrd jaccard_ARrem  label
0         0.0         0.0          0.8      0.795729    1.0
1         0.0         0.0            0      0.768577    1.0
2         0.0         0.0            0      0.726582    1.0
3         0.0         0.0            0       0.85964    1.0
4         0.0         0.0            0      0.748971    1.0
C:\Users\PC\AppData\Local\Temp\ipykernel_10972\3038593440.py:6: DtypeWarning: Columns (1,2,3,11,12) have mixed types. Specify dtype option on import or set low_memory=False.
  data = pd.read_csv(r"C:\Users\PC\Documents\MLCodes\urlset.csv", encoding=encoding, on_bad_lines='skip')
Collecting pydotplus
  Downloading pydotplus-2.0.2.tar.gz (278 kB)
     ---------------------------------------- 0.0/278.7 kB ? eta -:--:--
     ----- ------------------------------- 41.0/278.7 kB 991.0 kB/s eta 0:00:01
     ----- ------------------------------- 41.0/278.7 kB 991.0 kB/s eta 0:00:01
     ----- ------------------------------- 41.0/278.7 kB 991.0 kB/s eta 0:00:01
     ------ ------------------------------ 51.2/278.7 kB 262.6 kB/s eta 0:00:01
     --------- --------------------------- 71.7/278.7 kB 302.7 kB/s eta 0:00:01
     ------------- ---------------------- 102.4/278.7 kB 393.8 kB/s eta 0:00:01
     ------------- ---------------------- 102.4/278.7 kB 393.8 kB/s eta 0:00:01
     ------------------ ----------------- 143.4/278.7 kB 426.7 kB/s eta 0:00:01
     -------------------------- --------- 204.8/278.7 kB 518.8 kB/s eta 0:00:01
     ------------------------------ ----- 235.5/278.7 kB 554.9 kB/s eta 0:00:01
     ------------------------------ ----- 235.5/278.7 kB 554.9 kB/s eta 0:00:01
     -----------------------------------  276.5/278.7 kB 567.7 kB/s eta 0:00:01
     ------------------------------------ 278.7/278.7 kB 520.2 kB/s eta 0:00:00
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Getting requirements to build wheel: started
  Getting requirements to build wheel: finished with status 'done'
  Preparing metadata (pyproject.toml): started
  Preparing metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: pyparsing>=2.0.1 in c:\users\pc\appdata\local\programs\python\python311\lib\site-packages (from pydotplus) (3.1.2)
Building wheels for collected packages: pydotplus
  Building wheel for pydotplus (pyproject.toml): started
  Building wheel for pydotplus (pyproject.toml): finished with status 'done'
  Created wheel for pydotplus: filename=pydotplus-2.0.2-py3-none-any.whl size=24575 sha256=7d44751604c865ac2d8e66d632c3098d8262b55b07d6b597dc10c9408d26ec04
  Stored in directory: c:\users\pc\appdata\local\pip\cache\wheels\bd\ce\e8\ff9d9c699514922f57caa22fbd55b0a32761114b4c4acc9e03
Successfully built pydotplus
Installing collected packages: pydotplus
Successfully installed pydotplus-2.0.2
[notice] A new release of pip is available: 23.2.1 -> 24.1.2
[notice] To update, run: python.exe -m pip install --upgrade pip
Decision Tree Results:
Accuracy:0.9376
              precision    recall  f1-score   support
         0.0       0.94      0.93      0.94      9605
         1.0       0.93      0.95      0.94      9590
    accuracy                           0.94     19195
   macro avg       0.94      0.94      0.94     19195
weighted avg       0.94      0.94      0.94     19195
Performance Comparison:
Logistic Regression Accuracy: 0.66
 Decision Tree Accuracy: 1.00
 Decision Tree performed better.